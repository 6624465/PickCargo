@model PickC.Internal.ViewModals.DriverMonitorVm

@{
    ViewBag.Title = "GetDriversList";
    Layout = "~/Areas/Internal/Views/Shared/_Layout.cshtml";
}

@section seccss{
    <style type="text/css">
        #map {
            height: 530px;
            width: 100%;
            margin: 0px;
            padding: 0px;
        }
    </style>
}
<section class="content">
    @using (Html.BeginForm())
    {

        <div class="row">
            <div class="col-xs-12">                
                @{ Html.RenderPartial("DashboardMenuList"); }
                <div id="myTabContent" class="tab-content">
                    <div class="tab-pane fade in active" id="home">
                        <div class="row map-container">

                            <div class="col-md-3">
                                <div class="search-map">
                                    @*<input type="text" id="txtDriverName" placeholder="search by name" class="form-control" />*@
                                    <select id="ddlSearchByStatus" class="form-control">
                                        <option value="3">All</option>
                                        <option value="true">Log In</option>
                                        <option value="false">Log Off</option>
                                    </select>
                                </div>
                                <div class="dr-list" id="driverList">

                                    <ul class="listofvhl">
                                        @foreach (var item in Model.driverList)
                                        {
                                            <li onclick="getDriverDetails(this)" id="@item.DriverID">
                                                <img src="~/images/icon.png" class="img-circle" alt="driver" height="20" style="float:left;" />
                                                <div style="float:left;padding-left:10px;">
                                                    <span style="display:block"> @item.DriverName</span>
                                                    <span style="display:block"> @item.VehicleNo </span>
                                                    <span style="display:block">@item.PhoneNo</span>
                                                </div>
                                                <div class="clearfix"></div>
                                                <span class="active-dr">
                                                    @if (@item.Status)
                                                    {
                                                        <i class="fa fa-circle text-warning"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="fa fa-circle text-danger"></i>
                                                    }
                                                </span>

                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>

                            <div class="col-md-9">
                                <div id="map" style="border: 1px solid rgba(255,255,255,0.15);"></div>
                            </div>

                        </div>
                    </div>

                </div>
                <div id="driverDetailsModal" class="modal fade" role="dialog">
                    <div class="modal-dialog">

                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Driver Details</h4>
                            </div>
                            <div class="modal-body" id="driverData">
                                <img id="driverImage" src="" alt="driver" height="40" />
                                <label>Driver Name</label>
                                <div id="driverName"></div>
                                <label>License No</label>
                                <div id="licenseNumber"></div>
                                <label>Vehicle No</label>
                                <div id="vehicleNumber"></div>
                                <label>Vehicle Type</label>
                                <div id="vehicletype"></div>
                                <label>Contact No</label>
                                <div id="phoneNo"></div>
                                <label>Driver Photo</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
                    }

</section>
@section secscripts{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD7WVBL9AmhKs1QAr4x7mArA2mKZY-9nUo&v=3.exp&libraries=places&sensor=true"></script>
    <script type="text/javascript">
        var MapPoints = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.tripMonitorVmList))';
        var MY_MAPTYPE_ID = 'custom_style';
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();
        var map;

        var hyd = new google.maps.LatLng(17.24, 78.27);
        var mapOptions = {
            zoom: 10,
            center: hyd,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        function initialize() {
            directionsDisplay = new google.maps.DirectionsRenderer({ suppressMarkers: true });

            if (jQuery('#map').length > 0) {

                var locations = jQuery.parseJSON(MapPoints);

                map = new google.maps.Map(document.getElementById('map'), mapOptions);

                directionsDisplay.setMap(mapOptions);

                var infowindow = new google.maps.InfoWindow();
                var flightPlanCoordinates = [];
                var bounds = new google.maps.LatLngBounds();

                for (i = 0; i < locations.length; i++) {

                    marker = new google.maps.Marker({

                        position: new google.maps.LatLng(locations[i].address.lat, locations[i].address.lng),
                        map: map,
                        icon: '@Url.Content("~/images/truck.png")'
                    });
                    flightPlanCoordinates.push(marker.getPosition());
                    bounds.extend(marker.position);

                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                        return function () {
                            infowindow.setContent(locations[i]['title']);
                            infowindow.open(map, marker);
                        }
                    })(marker, i));
                }

                map.fitBounds(bounds);
                /* polyline
                    var flightPath = new google.maps.Polyline({
                        map: map,
                        path: flightPlanCoordinates,
                        strokeColor: "#FF0000",
                        strokeOpacity: 1.0,
                        strokeWeight: 2
                    }); */
                // directions service
                var start = flightPlanCoordinates[0];
                var end = flightPlanCoordinates[flightPlanCoordinates.length - 1];
                var waypts = [];
                for (var i = 1; i < flightPlanCoordinates.length - 1; i++) {
                    waypts.push({
                        location: flightPlanCoordinates[i],
                        stopover: true
                    });
                }
                //calcRoute(start, end, waypts);
            }
        }

        /*
        function calcRoute(start, end, waypts) {
            var request = {
                origin: start,
                destination: end,
                waypoints: waypts,
                optimizeWaypoints: true,
                travelMode: google.maps.TravelMode.DRIVING
            };
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                    var route = response.routes[0];

                    var summaryPanel = document.getElementById('directions_panel');
                    summaryPanel.innerHTML = '';
                    for (var i = 0; i < route.legs.length; i++) {
                        var routeSegment = i + 1;
                        summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment + '</b><br>';
                        summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
                        summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                        summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
                    }
                }
            });
        }
        */
        // google.maps.event.addDomListener(window, 'load', initialize);
        map = new google.maps.Map(document.getElementById('map'), mapOptions)

        $(function () {
            Looping();


            $('#ddlSearchByStatus').on("change", function () {

                $.ajax({
                    url: '@Url.Content("~/Internal/Dashboard/GetDriverBySearch")',
                    method: 'POST',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify({ 'status': $('#ddlSearchByStatus').val() }),
                    success: function (data) {

                        $('#driverList').val();
                        var html = '';
                        $.each(data, function (key, val) {
                            html += '<ul class="listofvhl">'
                            html += '<li onclick="getDriverDetails(this)" id=' + val.DriverID + '><img src="@Url.Content( "~/images/icon.png")" class="img-circle" alt="driver" height="20" style="float:left;">';
                            html += '<div style="float:left;padding-left:10px;">';
                            html += '<span style="display:block"> ' + val.DriverName + '</span>';
                            html += '<span style="display:block"> ' + val.VehicleNo + ' </span> </div>';
                            html += '<div class="clearfix"></div>';
                            html += '<span class="active-dr">';
                            if (val.Status) {
                                html += '<i class="fa fa-circle text-success"></i>';
                            }
                            else {
                                html += '<i class="fa fa-circle text-danger"></i>';
                            }
                            html += '</span></li></ul>';



                        });

                        $('#driverList').html(html);


                    },
                    error: function (err) {

                    },
                    failure: function (fail) {

                    }
                });
            });
        });

        function Looping() {
            setTimeout(function () {
                var promise = GetTripMonitorData();
                $.when(promise).done(function (data) {
                    MapPoints = JSON.stringify(data);
                    initialize();
                    Looping();
                });
            }, 1000 * 60);
        }

        function GetTripMonitorData() {
            var def = $.Deferred();
            $.ajax({
                url: '@Url.Content("~/Internal/Dashboard/GetTripMonitorInfo")',
                method: 'GET',
                contentType: 'application/json',
                dataType: 'json',
                success: function (res) {
                    def.resolve(res);
                },
                error: function (err) {
                    def.reject(err);
                },
                failure: function (fail) {
                    def.reject(fail)
                }
            });
            return def.promise();
        }


        function getDriverDetails(obj) {
            $.ajax({
                url: '@Url.Content("~/Internal/Dashboard/GetDriverDetails")',
                method: 'POST',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify({ 'id': obj.id }),
                success: function (res) {
                    $('#driverDetailsModal').modal('show');

                    var source = '@Url.Content("~/images/icon.png")';
                    $("#driverImage").attr('src', source);
                    $("#driverName").text(res.DriverName);
                    $("#licenseNumber").text(res.LicenseNo);
                    $("#vehicleNumber").text(res.VehicleNo);
                    $("#phoneNo").text(res.PhoneNo);
                    $("#vehicletype").text(res.VehicleType);
                    //debugger;
                },
                error: function (err) {
                    //
                }
            });
        }
        $(function () {
            $('#driverStatus').parent().addClass('active');
        });
    </script>
}